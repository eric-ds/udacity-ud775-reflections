5. What happens when you initialize a repository? Why do you need to do it?

Git starts tracking the files, and creates associated files for doing so.  Without the repository initialization, you wouldn't have version control.

8. How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area holds the changes you wish to commit.  It sets you up for a snapshot creation.  It allows you to separate the changes you have, at least by file, so that a logical commit can be made.

13. How can you use the staging area to make sure you have one commit per logical change?

Only add the files to the staging area that make sense for a single logical change.  This will leave the other modified files unaffected in the repository.

16. What are some situations when branches would be helpful in keeping your history organized?  How would branches help?

Some situations might be adding an experimental feature, or creating a named backup commit.  Branches allow you to separate a project based on these situations and track them separately, possibly later bringing them together.

21. How do the diagrams help you visualize the branch structure?

They help you see the relationship between the commits, and which commits may be accessible in each branch.  They also help you see when certain branches were made.

